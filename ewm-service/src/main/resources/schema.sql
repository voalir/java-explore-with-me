CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name character varying,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned boolean,
    title character varying,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation character varying(2000) NOT NULL,
    category_id bigint NOT NULL,
    initiator_id bigint NOT NULL,
    description character varying(7000) NOT NULL,
    event_date timestamp with time zone NOT NULL,
    created_on timestamp with time zone,
    published_on timestamp with time zone,
    lat double precision NOT NULL,
    lon double precision NOT NULL,
    paid boolean,
    participant_limit bigint,
    request_moderation boolean,
    state character varying,
    title character varying(120) NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT category_fk FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT initiator_fk FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations_events (
    event_id            BIGINT,
    compilation_id      BIGINT
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created timestamp without time zone,
    event_id bigint NOT NULL,
    requester_id bigint NOT NULL,
    status character varying,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT event_fk FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT requester_fk FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilation_events (
  compilation_id integer REFERENCES compilations (id) ON DELETE CASCADE,
  event_id integer REFERENCES events (id) ON DELETE CASCADE,
  PRIMARY KEY (compilation_id, event_id)
);